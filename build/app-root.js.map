{"version":3,"file":"app-root.js","sourceRoot":"","sources":["../src/app-root.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,mBAAmB,CAAC;AAG3B,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,UAAU;IAAvC;;QAOE,UAAK,GAAG,CAAC,CAAC;QAUV,wBAAwB;QACxB,mBAAmB;QACnB,2DAA2D;QAC3D,KAAK;QAEL;;;WAGG;QACH,oCAAoC;QACpC,8BAA8B;QAC9B,KAAK;IACP,CAAC;IApBU,MAAM;QACb,OAAO,IAAI,CAAA;;;;MAIT,CAAC;IACL,CAAC;CAcF,CAAA;AA5BiB,cAAM,GAAG,GAAG,CAAA;;;;IAIzB,CAAA;AAEH;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sCACjB;AAPC,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CA6BnB;SA7BY,OAAO","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport './views/loot-view';\n\n@customElement('app-root')\nexport class AppRoot extends LitElement {\n  static override styles = css`\n     :host {\n       display: block;\n     }\n   `;\n  @property({ type: Number })\n  count = 0;\n\n  override render() {\n    return html`\n      <main>\n        <loot-view></loot-view>\n      </main>\n     `;\n  }\n\n  //  private _onClick() {\n  //    this.count++;\n  //    this.dispatchEvent(new CustomEvent('count-changed'));\n  //  }\n\n  /**\n   * Formats a greeting\n   * @param name The name to say \"Hello\" to\n   */\n  //  sayHello(name: string): string {\n  //    return `Hello, ${name}`;\n  //  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'app-root': AppRoot;\n  }\n}\n"]}